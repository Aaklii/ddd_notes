// ********************##********************##********************#
// ********************##********************##********************#
// ********************##********************##********************#

import 'package:dartz/dartz.dart';
import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:ddd_notes/domain/core/failures.dart';
import 'package:ddd_notes/domain/core/value_object.dart';
import 'package:ddd_notes/domain/notes/value_objects.dart';

// ********************##********************##********************#
// ********************##********************##********************#

// ********************Part********************##

part 'todo_item.freezed.dart';

// ********************##********************##

// * Start of TodoItem
//? TodoItem is a Entity Data Class
//? TodoItem consists of:
//? Autogenerated Id
//? Name of Item
//? And check weather item is done or not
@freezed
abstract class TodoItem implements _$TodoItem {
  const TodoItem._();

  const factory TodoItem({
    @required UniqueId id,
    @required TodoName name,
    @required bool done,
  }) = _TodoItem;

  //? returns an empty TodoItem
  factory TodoItem.empty() => TodoItem(
        id: UniqueId(),
        name: TodoName(''),
        done: false,
      );

  //? method returns ValueFailure if there is any or returns none.
  Option<ValueFailure<dynamic>> get failureOption {
    return name.value.fold((f) => some(f), (_) => none());
  }
}

// ***************************END***************************
